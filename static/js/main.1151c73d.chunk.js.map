{"version":3,"sources":["transitionsCSS/fade.module.css","Components/Form/Form.module.css","Components/ContactList/ContactList.module.css","Components/FilterName/FilterName.module.css","App.module.css","Components/Logo/Logo.module.css","Components/Alert/Alert.module.css","transitionsCSS/appearSlide.module.css","Components/Form/Form.jsx","Components/ContactList/ContactList.jsx","Components/FilterName/FilterName.jsx","Components/Logo/Logo.jsx","Components/Alert/Alert.jsx","App.jsx","index.js"],"names":["module","exports","Form","state","name","number","nameInputId","uuidv4","numberInputId","notify","field","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSubmit","e","preventDefault","props","onSubmitForm","reset","handleChange","currentTarget","value","setState","this","onSubmit","className","style","container","htmlFor","item","type","onChange","id","Component","ContactList","contacts","onClickDelete","TransitionGroup","component","list","map","contact","CSSTransition","timeout","classNames","fade","onClick","FilterName","Logo","Alert","message","alert","mixStyle","bind","App","filter","alertRepetition","addContact","phoneContact","find","contactPhone","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","onDeleteContact","contactId","prevState","onResetAlert","listContacts","localStorage","getItem","parsedListContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","in","appear","appearSlide","unmountOnExit","length","onEntered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1151c73d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__veNvx\",\"enterActive\":\"fade_enterActive__10iU1\",\"exit\":\"fade_exit__f2WC1\",\"exitActive\":\"fade_exitActive__osyOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__31w3k\",\"item\":\"Form_item__3phD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1PGZT\",\"item\":\"ContactList_item__1a43p\",\"contact\":\"ContactList_contact__1Xz7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterName_container__3OP5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1Unyx\",\"center\":\"App_center__2YYdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3Ffm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1zoWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appearSlide_appear__DUCHz\",\"appearActive\":\"appearSlide_appearActive__3FGEL\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport style from './Form.module.css';\n\n/* eslint react/prop-types: 1 */\n\nexport default class Form extends Component {\n  static propTypes = {\n    onSubmitForm: PropTypes.func,\n  };\n\n  state = { name: '', number: '' };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  notify = field =>\n    toast.warn(`поле ${field} не должно бить пустым`, {\n      position: 'top-left',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (!name) {\n      this.notify('Name');\n    }\n    if (!number) {\n      this.notify('Number');\n    }\n\n    if (name && number) {\n      this.props.onSubmitForm(this.state);\n    }\n\n    this.reset();\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    // console.log({ name, value });\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={style.container}>\n        <label htmlFor={this.nameInputId} className={style.item}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.numberInputId} className={style.item}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <ToastContainer />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactList.module.css';\nimport fade from 'transitionsCSS/fade.module.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n/* eslint react/prop-types: 1 */\n\nexport default class ContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n      }),\n    ).isRequired,\n    onClickDelete: PropTypes.func.isRequired,\n  };\n  render() {\n    const { contacts, onClickDelete } = this.props;\n    return (\n      // TODO Добавление анимации на добавление-удаление списка контактов\n      <TransitionGroup component=\"ul\" className={style.list}>\n        {contacts.map(contact => (\n          <CSSTransition key={contact.id} timeout={250} classNames={fade}>\n            <li key={contact.id} className={style.item}>\n              <p className={style.contact}>\n                <span>{contact.name}:</span>\n                <span>{contact.number}</span>\n              </p>\n              <button type=\"button\" onClick={() => onClickDelete(contact.id)}>\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n","import React from 'react';\nimport style from './FilterName.module.css';\nimport PropTypes from 'prop-types';\n\n/* eslint react/prop-types: 1 */\n\nconst FilterName = ({ value, onChange }) => (\n  <label className={style.container}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilterName.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport default FilterName;\n","import React from 'react';\nimport style from './Logo.module.css';\n\nconst Logo = () => <h2 className={style.Logo}>Phonebook</h2>;\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Alert.module.css';\n/* eslint react/prop-types: 1 */\n\nconst Alert = ({ message }) => (\n  <>\n    <p className={style.alert}>{message}</p>\n  </>\n);\n\nAlert.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Alert;\n","import { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Components/Form/Form';\nimport ContactList from './Components/ContactList/ContactList';\nimport FilterName from './Components/FilterName/FilterName';\nimport style from './App.module.css';\nimport classNames from 'classnames/bind';\nimport Logo from 'Components/Logo/Logo';\nimport Alert from 'Components/Alert/Alert';\nimport appearSlide from './transitionsCSS/appearSlide.module.css'; /**модули CSS указывать до CSSTransition */\nimport fade from './transitionsCSS/fade.module.css';\n// import fadeScale from './transitionsCSS/fadeScale.module.css';\nimport { CSSTransition } from 'react-transition-group';\n\n/* eslint react/prop-types: 1 */\n\nlet mixStyle = classNames.bind(style);\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    alertRepetition: '',\n  };\n\n  componentDidMount() {\n    // TODO: 'При загрузке приложения, контакты, если таковые есть, считываются из локального хранилища и записываются в состояние'\n\n    const listContacts = localStorage.getItem('listContacts');\n    const parsedListContacts = JSON.parse(listContacts);\n\n    if (parsedListContacts) {\n      this.setState({ contacts: parsedListContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // TODO: 'При добавлении и удалении контакта, контакты сохраняются в локальное хранилище'\n\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      // console.log(\n      //   'Обновился список контактов, записываю список контактов в хранилище',\n      // );\n      localStorage.setItem('listContacts', JSON.stringify(nextContacts));\n    }\n    //   if (nextAlert !== prevAlert)\n    //   {\n    //     this.onResetAlert()\n    //  }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    /**создаём новый контакт и присвоим ему ID  */\n    const phoneContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    /**проверка на повторение имён */\n    if (contacts.find(contactPhone => contactPhone.name === name)) {\n      this.setState({ alertRepetition: `${name} is already in contacts!` });\n      return;\n    }\n    /**добавляем новый контакт в в состояние контактов */\n    this.setState(({ contacts }) => ({\n      contacts: [phoneContact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contactPhone =>\n      contactPhone.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n        contactPhone => contactPhone.id !== contactId,\n      ),\n    }));\n  };\n  onResetAlert = () => {\n    this.setState({ alertRepetition: '' });\n  };\n\n  render() {\n    const { contacts, alertRepetition } = this.state;\n    return (\n      <>\n        <CSSTransition\n          //TODO добавляем анимацию появления Logo при загрузке страницы\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames={appearSlide}\n          unmountOnExit\n        >\n          <Logo />\n        </CSSTransition>\n        <CSSTransition\n          //TODO Анимация появления-исчезания предупреждения о совпадении имён по условию\n          in={alertRepetition.length > 0}\n          timeout={3000}\n          classNames={fade}\n          unmountOnExit\n          onEntered={() => this.onResetAlert()}\n        >\n          <Alert message={alertRepetition} />\n        </CSSTransition>\n        <Form onSubmitForm={this.addContact}></Form>\n        <CSSTransition\n          //TODO Анимация появления-исчезания поля для фильтра контактов по условию\n          in={contacts.length > 1}\n          timeout={500}\n          classNames={fade}\n          unmountOnExit\n        >\n          <FilterName value={this.state.filter} onChange={this.changeFilter} />\n        </CSSTransition>\n        <h2 className={mixStyle('title', 'center')}>Contacts</h2>\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          onClickDelete={this.onDeleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}